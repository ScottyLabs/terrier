services:
    postgres:
        image: postgres:17
        environment:
            POSTGRES_DB: terrier
            POSTGRES_USER: terrier
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        volumes:
            - postgres_data:/var/lib/postgresql/data
        ports:
            - "5432:5432"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U terrier"]
            interval: 10s
            timeout: 5s
            retries: 5

    migration:
        build:
            context: ./terrier-backend
            dockerfile: Dockerfile
        environment:
            DATABASE_URL: postgres://terrier:${POSTGRES_PASSWORD}@postgres:5432/terrier
        depends_on:
            postgres:
                condition: service_healthy
        command: ["migration"] # Runs all pending migrations
        profiles: ["migration"]

    backend:
        build:
            context: ./terrier-backend
            dockerfile: Dockerfile
        environment:
            DATABASE_URL: postgres://terrier:${POSTGRES_PASSWORD}@postgres:5432/terrier
            OIDC_CLIENT_ID: ${OIDC_CLIENT_ID}
            OIDC_CLIENT_SECRET: ${OIDC_CLIENT_SECRET}
            OIDC_DISCOVERY_URL: ${OIDC_DISCOVERY_URL}
            ADMIN_EMAILS: ${ADMIN_EMAILS}
            RUST_LOG: ${RUST_LOG:-info}
        ports:
            - "3000:3000"
        depends_on:
            postgres:
                condition: service_healthy
        restart: unless-stopped

volumes:
    postgres_data:
